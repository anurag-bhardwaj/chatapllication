{"version":3,"sources":["components/NavBar.js","actions/authActions.js","components/AppSignIn.js","components/Chat.js","actions/chatActions.js","components/ChatHome.js","App.js","serviceWorker.js","reducers/chatReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["connect","state","console","log","auth","firebase","dispatch","signOut","getState","getFirebase","then","type","catch","err","props","links","uid","style","cursor","className","onClick","color","height","width","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","borderColor","id","AppSignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","textAlign","onSubmit","this","htmlFor","aria-describedby","onChange","marginLeft","Component","creds","credentials","signInWithEmailAndPassword","strVal","chat","userMessage","cls","chatstr","cnt","i","length","myfunc","SendMessage","message","getFirestore","firestore","collection","add","timeS","Date","ChatHome","myRef","React","createRef","current","scrollIntoView","block","behavior","messages","reverse","map","msg","key","ref","compose","ordered","chatmessage","firestoreConnect","orderBy","limit","Boolean","window","location","hostname","match","initState","authReducer","action","authError","combineReducers","chats","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4293b0c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../actions/authActions';\r\nfunction NavBar(props) {\r\n    const links = props.auth.uid ? (<li style={{cursor:\"pointer\"}} className=\"nav-item active\">\r\n        <a className=\"nav-link\" onClick={props.signOut} style={{color:\"white\"}}>SignOut</a>\r\n    </li>) : (null)\r\n    return (\r\n        <div style={{ height: '10vh' }}>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n                <div className=\"container\" style={{ width: \"90%\"}}>\r\n                    <a className=\"navbar-brand\" href=\"/\" style={{color:\"white\"}}>ChatApp</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" style={{borderColor:\"lightgreen\"}}>\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {links}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, { getFirebase })=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return (dispatch, getState, {getFirebase})=>{\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNOUT_ERROR'})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {connect } from 'react-redux';\r\nimport {signIn} from '../actions/authActions';    \r\n\r\nclass AppSignIn extends Component {\r\n    state={\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <form style={{ textAlign: \"start\" }} onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" style={{width:\"40%\", marginLeft:\"30%\"}}>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signIn: (creds)=>dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(AppSignIn);\r\n","import React from 'react';\r\nimport './chatHome.css';\r\nimport {connect} from 'react-redux';\r\nfunction Chat(props) {\r\n    console.log(props)\r\n    var strVal=props.chat.userMessage;\r\n    const cls = props.auth.uid===props.chat.uid ? (\"sent\") : (\"receive\");\r\n    var chatstr=\"\";\r\n    const myfunc= ()=>{\r\n        let cnt=0;\r\n        for(let i=0;i<strVal.length;i++)\r\n        {\r\n            if(strVal[i]===' ')\r\n            {\r\n                cnt=0;\r\n            }\r\n            else\r\n            {\r\n                cnt++;\r\n            }\r\n            if(cnt>=18)\r\n            {\r\n                chatstr+=' ';\r\n                cnt=0;\r\n            }\r\n            chatstr+=strVal[i];\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {myfunc()}\r\n            <div className=\"message\">\r\n                <div className={`${cls}`}>\r\n                    <p>\r\n                        {chatstr}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Chat);\r\n","const SendMessage = (message) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirebase().firestore();\r\n        firestore.collection('chatmessage').add({\r\n            ...message,\r\n            timeS:new Date()\r\n        }).then(()=> {\r\n            dispatch({ type: 'Send_Message', message })}).catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\nexport default SendMessage;","import React, { Component } from 'react';\r\nimport './chatHome.css';\r\nimport { connect } from 'react-redux';\r\nimport Chat from './Chat';\r\nimport SendMessage from '../actions/chatActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass ChatHome extends Component {\r\n    state = {\r\n        userMessage: \"\",\r\n        uid:this.props.auth.uid\r\n    }\r\n    myRef = React.createRef()\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            userMessage:this.state.userMessage,\r\n            uid: this.props.auth.uid\r\n        })\r\n        this.myRef.current.scrollIntoView({ block:'start' , behavior: 'smooth' })\r\n        if(this.state.userMessage){\r\n            this.props.SendMessage(this.state)\r\n        }\r\n        this.setState({\r\n            userMessage: \"\"\r\n        })\r\n    }\r\n    componentDidUpdate()\r\n    {\r\n        this.myRef.current.scrollIntoView({ block:'start' , behavior: 'smooth' })\r\n    }\r\n    render() {\r\n        if (this.props.messages) {\r\n            return (\r\n                <div style={{ height: \"83vh\", width: \"100%\", textAlign: \"start\" }}>\r\n                    <div className=\"show-message\">\r\n                        \r\n                        {[...this.props.messages].reverse().map(msg => (\r\n                            <Chat key={msg.id} chat={msg} />)\r\n                        )}\r\n                        <span ref={this.myRef}></span>\r\n                    </div>\r\n                    <div className=\"send-message\">\r\n                        <form className=\"write-message\" onSubmit={this.handleSubmit}>\r\n                            <input className=\"write-here\" type=\"text\" id=\"userMessage\" value={this.state.userMessage} onChange={this.handleChange} />\r\n                            <input type=\"submit\" className=\"btn\" value=\"send\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ height: \"83vh\", width: \"100%\", textAlign: \"start\" }}>\r\n                    <div className=\"show-message\">\r\n                        \r\n                        <span ref={this.myRef}></span>\r\n                    </div>\r\n                    <div className=\"send-message\">\r\n                        <form className=\"write-message\">\r\n                            <input className=\"write-here\" type=\"text\" id=\"userMessage\" value={this.state.userMessage} onChange={this.handleChange} />\r\n                            <input type=\"submit\" className=\"btn\" value=\"send\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state.firestore.ordered.chatmessage)\r\n    return {\r\n        messages: state.firestore.ordered.chatmessage,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        SendMessage: (msg) => dispatch(SendMessage(msg))\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'chatmessage', orderBy:['timeS', 'desc'], limit:20 }\r\n    ]))(ChatHome)\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport AppSignIn from './components/AppSignIn';\nimport ChatHome from './components/ChatHome';\nimport {connect} from 'react-redux';\n\nfunction App(props) {\n    const links= props.auth.uid ? (<ChatHome/>):(<AppSignIn />)\n    return (\n        <div className=\"App\"  style={{height:'100vh'}}>\n            <NavBar />\n            {links}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\r\n    chat:[\r\n        {id:'1', message:\"hey this is a simple message\"},\r\n        {id:'2', message:\"Hi a simple reply\"}\r\n    ]\r\n}\r\nexport default function(state=initState,action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case 'Send_Message':\r\n            console.log(\"message\", action.message);\r\n            return state\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState={}\r\n\r\nconst authReducer =(state=initState, action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"Success\")\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"Error\")\r\n            return{\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"Logged out\");\r\n            return state\r\n        case 'SIGNOUT_ERROR':\r\n            console.log(\"error in logout\");\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer;","import {combineReducers} from 'redux';\r\nimport chatReducer from './chatReducer';\r\nimport authReducer from './authReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    chats :chatReducer,\r\n    firebase:firebaseReducer,\r\n    firestore:firestoreReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport thunk from 'redux-thunk';\nimport { getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDvPg7OUxYV9OgF48g2ve8z4UsYVXz5Zqs\",\n  authDomain: \"chatapp-9362e.firebaseapp.com\",\n  databaseURL: \"https://chatapp-9362e.firebaseio.com\",\n  projectId: \"chatapp-9362e\",\n  storageBucket: \"chatapp-9362e.appspot.com\",\n  messagingSenderId: \"752600529467\",\n  appId: \"1:752600529467:web:305646a97b2394ce7b7a1e\",\n  measurementId: \"G-30D8MFLWVL\"\n};\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({});\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\n  )\n);\nconst rrfProps = {\n  firebase,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}